<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Hp/Desktop/sql/project/New Orders.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1901"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainADDRESS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="90"/><column index="2" value="300"/><column index="3" value="261"/><column index="4" value="111"/><column index="5" value="98"/><column index="6" value="62"/><column index="7" value="66"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CARTON" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="81"/><column index="2" value="40"/><column index="3" value="51"/><column index="4" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ONLINE_CUSTOMER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="97"/><column index="2" value="125"/><column index="3" value="126"/><column index="4" value="176"/><column index="5" value="124"/><column index="6" value="90"/><column index="7" value="187"/><column index="8" value="151"/><column index="9" value="131"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_HEADER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="97"/><column index="3" value="92"/><column index="4" value="107"/><column index="5" value="112"/><column index="6" value="109"/><column index="7" value="163"/><column index="8" value="84"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_ITEMS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="88"/><column index="3" value="137"/></column_widths><filter_values><column index="2" value="201"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="0"/></sort><column_widths><column index="1" value="88"/><column index="2" value="300"/><column index="3" value="156"/><column index="4" value="111"/><column index="5" value="186"/><column index="6" value="40"/><column index="7" value="51"/><column index="8" value="53"/><column index="9" value="57"/></column_widths><filter_values><column index="1" value="201"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT_CLASS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="156"/><column index="2" value="155"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="SHIPPER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="84"/><column index="2" value="106"/><column index="3" value="111"/><column index="4" value="130"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">
/*1. Write a query to Display the product details (product_class_code, product_id, product_desc, product_price,) as per the following criteria and sort them in descending order of category: 
a. If the category is 2050, increase the price by 2000
b. If the category is 2051, increase the price by 500
c. If the category is 2052, increase the price by 600.*/
 SELECT 
PRODUCT_CLASS_CODE,
PRODUCT_ID,
PRODUCT_DESC,
PRODUCT_PRICE, 
CASE PRODUCT_CLASS_CODE
     WHEN 2050 THEN PRODUCT_PRICE +2000
	 WHEN 2051 THEN PRODUCT_PRICE +500
	 WHEN 2052 THEN PRODUCT_PRICE +600
	 ELSE PRODUCT_PRICE
	 END AS 'New_product_price'
FROM PRODUCT 
ORDER by PRODUCT_CLASS_CODE DESC;
---------------------------------------------------------------------------------------------------

/*2. Write a query to display (product_class_desc, product_id, product_desc, product_quantity_avail )
 and Show inventory status of products as below as per their available quantity: 
 a. For Electronics and Computer categories, if available quantity is &lt;= 10, show 'Low stock', 11 &lt;= qty &lt;= 30, show 'In stock', &gt;= 31, show 'Enough stock'
 b. For Stationery and Clothes categories, if qty &lt;= 20, show 'Low stock', 21 &lt;= qty &lt;= 80, show 'In stock', &gt;= 81, show 'Enough stock'
 c. Rest of the categories, if qty &lt;= 15 – 'Low Stock', 16 &lt;= qty &lt;= 50 – 'In Stock', &gt;= 51 – 'Enough stock' For all categories, if available quantity is 0, show 'Out of stock'. Hint: Use case statement.*/
SELECT
PRODUCT_CLASS.PRODUCT_CLASS_DESC,
PRODUCT.PRODUCT_ID,
PRODUCT.PRODUCT_DESC,
PRODUCT.PRODUCT_QUANTITY_AVAIL,
CASE 
     WHEN PRODUCT_CLASS.PRODUCT_CLASS_DESC in ('Electronics','Computer') THEN 
	       CASE 
		       WHEN PRODUCT_QUANTITY_AVAIL &lt;= 10 THEN 'Low stock'
		       WHEN PRODUCT_QUANTITY_AVAIL  BETWEEN 11 and 30 THEN 'In stock'
		       WHEN PRODUCT_QUANTITY_AVAIL &gt;=31 THEN 'Enough stock'
		   END 
		 WHEN PRODUCT_CLASS.PRODUCT_CLASS_DESC in ('Stationery', 'Clothes') THEN 
	       CASE 
		       WHEN PRODUCT_QUANTITY_AVAIL &lt;= 20 THEN 'Low stock'
		       WHEN PRODUCT_QUANTITY_AVAIL BETWEEN 21 and 80 THEN 'In stock'
		       WHEN PRODUCT_QUANTITY_AVAIL &gt;=81 THEN 'Enough stock'
		   END	
	ELSE
	    CASE 
		     WHEN PRODUCT_QUANTITY_AVAIL &lt;= 15 THEN 'Low stock'
		     WHEN PRODUCT_QUANTITY_AVAIL BETWEEN 16 and 50 THEN 'In stock'
		    WHEN PRODUCT_QUANTITY_AVAIL &gt;=51 THEN 'Enough stock'
		END
END as 'STOCK_STATUS' 
FROM PRODUCT
INNER JOIN PRODUCT_CLASS on PRODUCT.PRODUCT_CLASS_CODE=PRODUCT_CLASS.PRODUCT_CLASS_CODE
;
----------------------------------------------------------------------------------------------------------------------

/*3. Write a query to Show the count of cities in all countries other than USA &amp; MALAYSIA, 
with more than 1 city, in the descending order of CITIES.*/

SELECT  COUNTRY,
count(*) as Number_of_cities
FROM ADDRESS
where NOT COUNTRY='USA'AND not COUNTRY='Malaysia'
GROUP BY COUNTRY
HAVING (count(COUNTRY)&gt;1)
ORDER BY Number_of_cities DESC;
----------------------------------------------------------------------------------------------------------------------
/*4. Write a query to display the customer_id,customer full name ,city,pincode,and order details 
(order id, product class desc, product desc, subtotal(product_quantity * product_price)) 
for orders shipped to cities whose pin codes do not have any 0s in them.
Sort the output on customer name and subtotal.*/
 
SELECT ONLINE_CUSTOMER.CUSTOMER_ID,
ORDER_HEADER.ORDER_ID,
(ONLINE_CUSTOMER.CUSTOMER_FNAME ||' ' ||ONLINE_CUSTOMER.CUSTOMER_LNAME) as CUSTOMER_NAME,
PRODUCT_CLASS.PRODUCT_CLASS_DESC,
PRODUCT.PRODUCT_DESC,
ORDER_ITEMS.PRODUCT_QUANTITY,
PRODUCT.PRODUCT_PRICE,
(PRODUCT.PRODUCT_PRICE*ORDER_ITEMS.PRODUCT_QUANTITY) as SUB_TOTAL,
ADDRESS.CITY,
ADDRESS.PINCODE
FROM ONLINE_CUSTOMER
INNER JOIN ADDRESS on ONLINE_CUSTOMER.ADDRESS_ID = ADDRESS.ADDRESS_ID
INNER JOIN ORDER_HEADER on ONLINE_CUSTOMER.CUSTOMER_ID=ORDER_HEADER.CUSTOMER_ID
INNER JOIN ORDER_ITEMS on ORDER_HEADER.ORDER_ID=ORDER_ITEMS.ORDER_ID
INNER JOIN PRODUCT on ORDER_ITEMS.PRODUCT_ID = PRODUCT.PRODUCT_ID
INNER JOIN PRODUCT_CLASS on  PRODUCT.PRODUCT_CLASS_CODE=PRODUCT_CLASS.PRODUCT_CLASS_CODE
WHERE NOT ADDRESS.PINCODE like '%0%' AND ORDER_HEADER.ORDER_STATUS='Shipped'
ORDER by CUSTOMER_NAME AND SUB_TOTAL
 ;

-----------------------------------------------------------------------------------------------------------------------
/*5. Write a Query to display product id,product description,totalquantity(sum(product quantity)
 for an item which has been bought maximum no. of times (Quantity Wise) along with product id 201.*/

SELECT ORDER_ITEMS.PRODUCT_ID,
PRODUCT.PRODUCT_DESC,
sum(ORDER_ITEMS.PRODUCT_QUANTITY) as Total_Quantity
FROM ORDER_ITEMS
LEFT JOIN PRODUCT 
on ORDER_ITEMS.PRODUCT_ID = PRODUCT.PRODUCT_ID
WHERE ORDER_ITEMS.PRODUCT_ID in
(
SELECT ORDER_ITEMS.PRODUCT_ID
FROM ORDER_ITEMS
WHERE ORDER_ITEMS.PRODUCT_ID = 201
);
 
 --------------------------------------------------------------------------------------------------------------------
 /*6.Write a query to display the customer_id,customer name, email and order details
 (order id, product desc,product qty, subtotal(product_quantity * product_price)) 
 for all customers even if they have not ordered any item.(225 ROWS) */
 SELECT ONLINE_CUSTOMER.CUSTOMER_ID,
 ORDER_HEADER.ORDER_ID,
 (ONLINE_CUSTOMER.CUSTOMER_FNAME ||' ' ||ONLINE_CUSTOMER.CUSTOMER_LNAME) as Customer_Name, 
 ONLINE_CUSTOMER.CUSTOMER_EMAIL,
 ORDER_ITEMS.PRODUCT_ID,
 PRODUCT.PRODUCT_DESC,
 PRODUCT.PRODUCT_PRICE,
 ORDER_ITEMS.PRODUCT_QUANTITY,
(PRODUCT.PRODUCT_PRICE*ORDER_ITEMS.PRODUCT_QUANTITY) as Sub_Total
 FROM ONLINE_CUSTOMER
  LEFT JOIN  ORDER_HEADER on  ORDER_HEADER.CUSTOMER_ID=ONLINE_CUSTOMER.CUSTOMER_ID 
  LEFT JOIN ORDER_ITEMS on  ORDER_HEADER.ORDER_ID=ORDER_ITEMS.ORDER_ID
  LEFT JOIN  PRODUCT on   PRODUCT.PRODUCT_ID=ORDER_ITEMS.PRODUCT_ID
 ;
 ---------------------------------------------------------------------------------------------------------------------</sql><current_tab id="0"/></tab_sql></sqlb_project>
